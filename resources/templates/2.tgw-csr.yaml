AWSTemplateFormatVersion: "2010-09-09"
Description: "Add Transit Gateway and Datacenter Router"

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "VPC Parameters"
        Parameters:
          - AvailabilityZoneA
          - AvailabilityZoneB

Parameters:
  ParentStack:
    Description: "Name of the CFN Stack for VPCs"
    Type: String
    Default: "TGW8"

  KeyPair:
    Description: "Keypair to access the CSR or Juniper"
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "csr1000v-tgw"
 
  RouterChoice: 
    Description: Juniper, Cisco or StrongSwan Datacenter Router.
    Default: Cisco
    Type: String
    AllowedValues: 
      - Cisco
      - Juniper
      - StrongSwan
    ConstraintDescription: must specify Cisco, Juniper, or StrongSwan.
Conditions: 
  CreateCiscoCSR: !Equals [ !Ref RouterChoice, Cisco ]
  CreateJuniperSRX: !Equals [ !Ref RouterChoice, Juniper ]
  CreateStrongSwan: !Equals [ !Ref RouterChoice, StrongSwan]

Mappings:
  # AMI for Cisco CSR1kv and Juniper SRX
  RegionMap:
    'eu-north-1':
      CSRAMI: "ami-3a098244"
      SRXAMI: "ami-070c22dc10f3fe11c"
      SWANAMI: "ami-0b7a46b4bd694e8a6"
    'ap-south-1':
      CSRAMI: "ami-0588edd878b8b8542"
      SRXAMI: "ami-0d8cde425328270f6"
      SWANAMI: "ami-0470e33cd681b2476"
    'eu-west-3':
      CSRAMI: "ami-07d7fa89add77fc88"
      SRXAMI: "ami-09a7010143753ffab"
      SWANAMI: "ami-00077e3fed5089981"
    'eu-west-2':
      CSRAMI: "ami-0232c6d101adf6f0e"
      SRXAMI: "ami-06da0d44a148bf6c4"
      SWANAMI: "ami-01a6e31ac994bbc09"
    'eu-west-1':
      CSRAMI: "ami-061919bc753fac9f1"
      SRXAMI: "ami-0c56da2afd28b9eeb"
      SWANAMI: "ami-06ce3edf0cff21f07"
    'ap-northeast-3':
      CSRAMI: "ami-000954ba2aee2ea2c"
      SWANAMI: "ami-028238ef8d1df506f"
    'ap-northeast-2':
      CSRAMI: "ami-0bfd6b68306c37acd"
      SRXAMI: "ami-0b18a6631c4336cc5"
      SWANAMI: "ami-01288945bd24ed49a"
    'ap-northeast-1':
      CSRAMI: "ami-0a32b4f1b6dbf76e2"
      SRXAMI: "ami-04c7106309afea609"
      SWANAMI: "ami-0f310fced6141e627"
    'sa-east-1':
      CSRAMI: "ami-04c9e7db483ef8f85"
      SRXAMI: "ami-03436612decf8bc60"
      SWANAMI: "ami-003449ffb2605a74c"
    'ca-central-1':
      CSRAMI: "ami-03406d8bb9a6eb082"
      SRXAMI: "ami-01806173d935e9a59"
      SWANAMI: "ami-054362537f5132ce2"
    'ap-southeast-1':
      CSRAMI: "ami-01f265b921ce8c8ad"
      SRXAMI: "ami-07b3028c0c01a0766"
      SWANAMI: "ami-0ec225b5e01ccb706"
    'ap-southeast-2':
      CSRAMI: "ami-0613911a862330b2f"
      SRXAMI: "ami-016655050b5a20b43"
      SWANAMI: "ami-0970010f37c4f9c8d"
    'eu-central-1':
      CSRAMI: "ami-0e5b92a928e8157de"
      SRXAMI: "ami-0e986c61d4fe926e2"
      SWANAMI: "ami-076431be05aaf8080"
    'us-east-1':
      CSRAMI: "ami-0fc7a3d5400f4619d"
      SRXAMI: "ami-05fa9647b42f06203"
      SWANAMI: "ami-0323c3dd2da7fb37d"
    'us-east-2':
      CSRAMI: "ami-0fda690c9c2f5cbf9"
      SRXAMI: "ami-0941daed95357e040"
      SWANAMI: "ami-0f7919c33c90f5b58"
    'us-west-1':
      CSRAMI: "ami-0dba8e0dd8bf42ee8"
      SRXAMI: "ami-04283cf0a2bf7c17c"
      SWANAMI: "ami-06fcc1f0bc2c8943f"
    'us-west-2':
      CSRAMI: "ami-0ea109acd52c4b94d"
      SRXAMI: "ami-09bb11b7dabb0f165"
      SWANAMI: "ami-0d6621c01e8c2de2c"


Resources:
  # Create Transit Gateway
  TransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      AmazonSideAsn: 65000
      Description: "TGW Route Integration Test"
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTableAssociation: "disable"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      Tags:
        - Key: Name
          Value: !Ref ParentStack
        - Key: Application
          Value: !Ref "AWS::StackId"

  # Transit Gateway Route Table Creation

  RouteTableGreen:
    Type: "AWS::EC2::TransitGatewayRouteTable"
    Properties:
      Tags:
        - Key: Name
          Value: Green Route Table
      TransitGatewayId: !Ref TransitGateway

  RouteTableRed:
    Type: "AWS::EC2::TransitGatewayRouteTable"
    Properties:
      Tags:
        - Key: Name
          Value: Red Route Table
      TransitGatewayId: !Ref TransitGateway

  RouteTableBlue:
    Type: "AWS::EC2::TransitGatewayRouteTable"
    Properties:
      Tags:
        - Key: Name
          Value: Blue Route Table
      TransitGatewayId: !Ref TransitGateway

  # Non-Prod 1 Connect to the Transit Gateway
  AttachNP1:
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds:
        - Fn::ImportValue: !Sub "NP1-${ParentStack}-AttachSubnetA"
        - Fn::ImportValue: !Sub "NP1-${ParentStack}-AttachSubnetB"
      Tags:
        - Key: Name
          Value: NP1Attach
      TransitGatewayId: !Ref TransitGateway
      VpcId:
        Fn::ImportValue: !Sub "NP1-${ParentStack}-VPC"

  AssociateNP1RouteTable:
    Type: "AWS::EC2::TransitGatewayRouteTableAssociation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP1
      TransitGatewayRouteTableId: !Ref RouteTableRed

  PropagateNP1Red:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP1
      TransitGatewayRouteTableId: !Ref RouteTableRed

  PropagateNP1Green:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP1
      TransitGatewayRouteTableId: !Ref RouteTableGreen

  # Non-Prod 2 Connect to the Transit Gateway
  AttachNP2:
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds:
        - Fn::ImportValue: !Sub "NP2-${ParentStack}-AttachSubnetA"
        - Fn::ImportValue: !Sub "NP2-${ParentStack}-AttachSubnetB"
      Tags:
        - Key: Name
          Value: NP2Attach
      TransitGatewayId: !Ref TransitGateway
      VpcId:
        Fn::ImportValue: !Sub "NP2-${ParentStack}-VPC"

  AssociateNP2RouteTable:
    Type: "AWS::EC2::TransitGatewayRouteTableAssociation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP2
      TransitGatewayRouteTableId: !Ref RouteTableRed

  PropagateNP2Red:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP2
      TransitGatewayRouteTableId: !Ref RouteTableRed

  PropagateNP2Green:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachNP2
      TransitGatewayRouteTableId: !Ref RouteTableGreen

  # Prod 1 Connect to the Transit Gateway
  AttachP1:
    Type: "AWS::EC2::TransitGatewayAttachment"
    Properties:
      SubnetIds:
        - Fn::ImportValue: !Sub "P1-${ParentStack}-AttachSubnetA"
        - Fn::ImportValue: !Sub "P1-${ParentStack}-AttachSubnetB"
      Tags:
        - Key: Name
          Value: P1Attach
      TransitGatewayId: !Ref TransitGateway
      VpcId:
        Fn::ImportValue: !Sub "P1-${ParentStack}-VPC"

  AssociateP1RouteTable:
    Type: "AWS::EC2::TransitGatewayRouteTableAssociation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachP1
      TransitGatewayRouteTableId: !Ref RouteTableBlue

  PropagateP1Blue:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachP1
      TransitGatewayRouteTableId: !Ref RouteTableBlue

  PropagateP1Green:
    Type: "AWS::EC2::TransitGatewayRouteTablePropagation"
    Properties:
      TransitGatewayAttachmentId: !Ref AttachP1
      TransitGatewayRouteTableId: !Ref RouteTableGreen